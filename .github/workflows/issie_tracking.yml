name: CI for Issie Tracking

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

env:
  # Valeurs globales pour le pipeline
  ENV: development # ou Changez en "production" pour l'environnement de production
  DOTNET_VERSION: 8.0
  NODE_VERSION: 18

jobs:
  build-backend:
    runs-on: ubuntu-latest
    env:
      # Variables conditionnelles en fonction de l'environnement
      POSTGRES_USER: ${{ secrets.POSTGRES_USER_DEV }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_DEV }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB_DEV }}
      DOTNET_CONNECTION_STRING: ${{ secrets.DOTNET_CONNECTION_STRING_DEV }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore backend

      - name: Build Backend
        run: dotnet build backend --no-restore --configuration Release

      - name: Run Tests
        env:
          DOTNET_CONNECTION_STRING: ${{ env.DOTNET_CONNECTION_STRING }}
        run: dotnet test backend --no-build --verbosity normal

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

  build-frontend:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ${{ env.ENV }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm install --prefix frontend

      - name: Build Frontend
        run: npm run build --prefix frontend

  deploy-to-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    env:
      # Variables pour l'environnement de production
      POSTGRES_USER: ${{ secrets.POSTGRES_USER_PROD }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_PROD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB_PROD }}
      DOTNET_CONNECTION_STRING: ${{ secrets.DOTNET_CONNECTION_STRING_PROD }}

    steps:
      - name: Deploy Backend
        run: echo "Déployer le backend en production..."

      - name: Deploy Frontend
        run: echo "Déployer le frontend en production..."
