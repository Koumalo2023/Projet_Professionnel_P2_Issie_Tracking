name: CI for Issie Tracking

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

env:
  DOTNET_VERSION: 8.0
  NODE_VERSION: 18

jobs:
  build-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: devUser
          POSTGRES_PASSWORD: Tefong006
          POSTGRES_DB: IssueTracking_Dev_DB
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U devUser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore backend

      - name: Inject Secrets into Environment
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER_DEV }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_DEV }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB_DEV }}" >> $GITHUB_ENV
          echo "DOTNET_CONNECTION_STRING=${{ secrets.DOTNET_CONNECTION_STRING_DEV }}" >> $GITHUB_ENV

      - name: Build Backend
        run: dotnet build backend --no-restore --configuration Release

      - name: Run Tests
        run: |
          echo "Running backend tests with connection string: $DOTNET_CONNECTION_STRING"
          dotnet test backend --no-build --verbosity normal

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Inject Secrets into Environment
        run: |
          echo "NODE_ENV=${{ secrets.ENV_DEV }}" >> $GITHUB_ENV

      - name: Install Dependencies
        run: npm install --prefix frontend

      - name: Build Frontend
        run: npm run build --prefix frontend

  deploy-to-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]

    steps:
      - name: Inject Production Secrets
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER_PROD }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_PROD }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB_PROD }}" >> $GITHUB_ENV
          echo "DOTNET_CONNECTION_STRING=${{ secrets.DOTNET_CONNECTION_STRING_PROD }}" >> $GITHUB_ENV

      - name: Deploy Backend
        run: |
          echo "Deploying backend with DB: $POSTGRES_DB"

      - name: Deploy Frontend
        run: echo "Deploying frontend to production"
